/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TracklistRouteImport } from './routes/tracklist'
import { Route as MenuRouteImport } from './routes/menu'
import { Route as LyricsRouteImport } from './routes/lyrics'
import { Route as FaulksRouteImport } from './routes/faulks'
import { Route as BandRouteImport } from './routes/band'
import { Route as IndexRouteImport } from './routes/index'

const TracklistRoute = TracklistRouteImport.update({
  id: '/tracklist',
  path: '/tracklist',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuRoute = MenuRouteImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRouteImport,
} as any)
const LyricsRoute = LyricsRouteImport.update({
  id: '/lyrics',
  path: '/lyrics',
  getParentRoute: () => rootRouteImport,
} as any)
const FaulksRoute = FaulksRouteImport.update({
  id: '/faulks',
  path: '/faulks',
  getParentRoute: () => rootRouteImport,
} as any)
const BandRoute = BandRouteImport.update({
  id: '/band',
  path: '/band',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/band': typeof BandRoute
  '/faulks': typeof FaulksRoute
  '/lyrics': typeof LyricsRoute
  '/menu': typeof MenuRoute
  '/tracklist': typeof TracklistRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/band': typeof BandRoute
  '/faulks': typeof FaulksRoute
  '/lyrics': typeof LyricsRoute
  '/menu': typeof MenuRoute
  '/tracklist': typeof TracklistRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/band': typeof BandRoute
  '/faulks': typeof FaulksRoute
  '/lyrics': typeof LyricsRoute
  '/menu': typeof MenuRoute
  '/tracklist': typeof TracklistRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/band' | '/faulks' | '/lyrics' | '/menu' | '/tracklist'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/band' | '/faulks' | '/lyrics' | '/menu' | '/tracklist'
  id:
    | '__root__'
    | '/'
    | '/band'
    | '/faulks'
    | '/lyrics'
    | '/menu'
    | '/tracklist'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BandRoute: typeof BandRoute
  FaulksRoute: typeof FaulksRoute
  LyricsRoute: typeof LyricsRoute
  MenuRoute: typeof MenuRoute
  TracklistRoute: typeof TracklistRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tracklist': {
      id: '/tracklist'
      path: '/tracklist'
      fullPath: '/tracklist'
      preLoaderRoute: typeof TracklistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lyrics': {
      id: '/lyrics'
      path: '/lyrics'
      fullPath: '/lyrics'
      preLoaderRoute: typeof LyricsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/faulks': {
      id: '/faulks'
      path: '/faulks'
      fullPath: '/faulks'
      preLoaderRoute: typeof FaulksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/band': {
      id: '/band'
      path: '/band'
      fullPath: '/band'
      preLoaderRoute: typeof BandRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BandRoute: BandRoute,
  FaulksRoute: FaulksRoute,
  LyricsRoute: LyricsRoute,
  MenuRoute: MenuRoute,
  TracklistRoute: TracklistRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
